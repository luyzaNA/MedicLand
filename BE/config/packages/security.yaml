security:
    password_hashers:
        App\Entity\User:
            algorithm: auto
    
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        login:
            pattern:  ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

<<<<<<< Updated upstream
=======
        register:
            pattern: ^/api/register
            stateless: true
            security: false
       
        register_admin:
            pattern: ^/api/register_admin
            stateless: true
            security: false
        
        logout:
            pattern: /api/logout
            stateless: true
            security: false

>>>>>>> Stashed changes
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
<<<<<<< Updated upstream
=======
        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        - { path: ^/api/register_admin, roles: IS_AUTHENTICATED_ANONYMOUSLY }
>>>>>>> Stashed changes
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }